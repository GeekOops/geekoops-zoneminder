- name: enable server:php repository
  community.general.zypper_repository:
    name: spins:invis:15:common
    repo: 'https://download.opensuse.org/repositories/spins:/invis:/15:/common/15.4/'
    state: present
    runrefresh: true
    auto_import_keys: yes

- name: Refresh repos and update packages
  community.general.zypper:
    name: '*'
    state: latest
    update_cache: yes

- name: Install packages
  ansible.builtin.package:
    name:
      - ffmpeg-4
      - ZoneMinder
    state: present

#- name: copy config of zm initialization routine
#  ansible.builtin.template:
#    src: "zm_database_init.conf.j2"
#    dest: "/etc/zoneminder/zm_database_init.conf"
#    owner: root
#    group: "root"
#    mode: '0644'

- name: copy config adaptations
  ansible.builtin.template:
    src: "99-local.conf.j2"
    dest: "/etc/zoneminder/conf.d/99-local.conf"
    owner: root
    group: "www"
    mode: '0640'

- name: create ZoneMinder mysql database with hardcoded name zm
  community.mysql.mysql_db:
     name: "{{ zm_db_name }}"
     state: present

- name: Create mysql user for ZoneMinder
  community.mysql.mysql_user:
     name: "{{ zm_db_user }}"
     password: "{{ zm_db_pw }}"
     state: present

- name: create ZoneMinder database user
  community.mysql.mysql_user:
     name: "{{ zm_db_user }}"
     password: "{{ zm_db_pw }}"
     state: present
     priv:
       '{{ zm_db_name }}.*:ALL'

- name: disable use of php cgi
  ansible.builtin.shell: |
    a2dismod php8

- name: execute initialization routine for mysql database
  when: zm_database_initialized == false
  ansible.builtin.shell: |
    mariadb -u{{ zm_db_user }} -p{{ zm_db_pw }}  < /usr/share/zoneminder/db/zm_create.sql

- name: modify apache config file
  ansible.builtin.blockinfile:
    path: "/etc/apache2/vhosts.d/zm.conf"
    insertbefore: '</VirtualHost>'
    marker: "# {mark} ANSIBLE MANAGED BLOCK 1 #"
    block: |
      ServerName {{ zm_domain }}
      ServerAlias {{ zm_domain }}
      ServerAdmin {{ zm_webmaster }}



- name: modify apache config file with some php-fpm config
  when: zm_php_fpm_pool | length > 0
  ansible.builtin.blockinfile:
    path: "/etc/apache2/vhosts.d/zm.conf"
    insertafter: '<VirtualHost'
    marker: "# {mark} ANSIBLE MANAGED BLOCK 2 #"
    block: |
         <Proxy "fcgi://{{ zm_php_fpm_pool }}/">
            # we must declare a (any) parameter in here 
            # or it won't register the proxy ahead of time
            ProxySet disablereuse=off
        </Proxy>



- name: modify apache config file with some php-fpm config
  when: zm_php_fpm_pool | length > 0
  ansible.builtin.blockinfile:
    path: "/etc/apache2/vhosts.d/zm.conf"
    insertbefore: '</VirtualHost>'
    marker: "# {mark} ANSIBLE MANAGED BLOCK 3 #"
    block: |
      <FilesMatch ".+\.ph(p[34578]?|t|tml)$">
            SetHandler "proxy:unix:/var/run/php-fpm/{{ zm_php_fpm_pool }}.sock|fcgi://{{ zm_php_fpm_pool }}/"
      </FilesMatch>



- name: Ensure apache service is enabled
  systemd:
    name: "apache2"
    state: restarted
    enabled: true

- name: Ensure zm service is enabled
  systemd:
    name: "zm"
    state: started
    enabled: true
  tags: ['zm', 'systemd']

- name: Ensure AppArmor lets php-fpm write and lock the zoneminder folder
  ansible.builtin.lineinfile:
    path: /etc/apparmor.d/local/php-fpm
    line: "/usr/share/zoneminder/** rwlk,"

- name: Ensure AppArmor lets php-fpm read the zoneminder config folder
  ansible.builtin.lineinfile:
    path: /etc/apparmor.d/local/php-fpm
    line: "/etc/zoneminder/** r,"

- name: Ensure AppArmor lets php-fpm access loadavg
  ansible.builtin.lineinfile:
    path: /etc/apparmor.d/local/php-fpm
    line: "/proc/loadavg r,"

- name: Ensure AppArmor lets php-fpm access
  ansible.builtin.lineinfile:
    path: /etc/apparmor.d/local/php-fpm
    line: "@{run}/zm/zm*.sock rwlk,"

- name: Ensure AppArmor is reloaded
  systemd:
    name: apparmor
    state: restarted
    enabled: true


